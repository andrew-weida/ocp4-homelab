bridge_prov: ocp4-net
redfish:
  redfish_ip: 192.168.125.1
  listen_port: 8000
  enable: true
baremetal_net:
  name: ocp4-net
  net: 192.168.125.0
  netmask: 255.255.255.0
  prefix: 24
  gateway: 192.168.125.1
vip:
  api: 192.168.125.10
  api_int: 192.168.125.10
  apps: 192.168.125.10
master:
  cpu: 16
  memory: 49152
  disks: 
    - 150
    - 350
worker:
  cpu: 8
  memory: 32768
  disks: 
    - 150
    - 100
# acm_managed:
#   base_domain: home.arpa
#   cluster_name: acm-test
#   vip:
#     api: 192.168.125.16
#     api_int: 192.168.125.16
#     apps: 192.168.125.16
#   master:
#     cpu: 16
#     memory: 12288
#     disks: 
#       - 150
#   worker:
#     cpu: 16
#     memory: 12288
#     disks: 
#       - 150
# acm_managed_domain: "{{ acm_managed.cluster_name }}.{{ acm_managed.base_domain }}"
install_acm: true
install_gitops: true
kvm_host:
  enable_selinux: true
  reboot_timeout: 1200
cluster_name: acm-hub
base_domain: home.arpa
domain: "{{ cluster_name }}.{{ base_domain }}"
pull_secret_file: pull-secret.txt
ocp_version: stable-4.15
# choose install method: ipi, ai, agent
# ai method requires you to generate your iso and populate ai_discovery_iso_url variable at console.redhat.com
install_method: agent
image_dir: /var/lib/libvirt/images
# Set create_image_fs to true if the root filesystem is not large enough for VM images,
# And list the un-used disk(s) (/dev/sda, /dev/nvme01n1, etc) to create fs the from in image_fs_disks.
create_image_fs: false
image_fs_disks: []